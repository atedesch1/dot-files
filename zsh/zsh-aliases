# Change wallpaper
chwall()
{
    wallpaper=$WALLPAPER
    chosen=$1
    if [ ! -f "$chosen" ]; then
      return
    fi
    if [ -f "$wallpaper" ]; then
      rm -f "$wallpaper"
    fi
    cp "$chosen" "$wallpaper"
    i3-msg restart >> /dev/null
}

# Use ranger to change directories
rangercd()
{
    tmp="$(mktemp)"
    ranger --choosedir="$tmp" "$@"
    if [ -f "$tmp" ]; then
        dir="$(cat "$tmp")"
        rm -f "$tmp"
        [ -d "$dir" ]  && [ "$dir" != "$(pwd)" ] && cd "$dir"                                               
    fi
}
bindkey -s '^r' 'rangercd\n'

# Open vscode on the current directory
codehere()
{
    dir="$(pwd)"
    code $dir
    exit 0
}
bindkey -s '^ ' 'codehere\n'

# Creates new leetcode problem solution directory
newleet()
{
    mkdir $1 $1/cpp
    echo '
#include <iostream>

bool solution()
{
  return true;
}

int main()
{
  std::cout << solution() << std::endl;
  return 0;
}
' >> $1/cpp/main.cpp
}

# colorize grep output (good for log files)
alias grep='grep --color=auto'
alias egrep='egrep --color=auto'
alias fgrep='fgrep --color=auto'

# ls
alias ls='ls --color=always'
alias la='ls -la'

# confirm before overwriting something
alias cp="cp -i"
alias mv='mv -i'
alias rm='rm -i'

# git
alias addup='git add -u'
alias addall='git add .'
alias branch='git branch'
alias checkout='git checkout'
alias clone='git clone'
alias commit='git commit -m'
alias merge='git merge'
alias rebase='git rebase'
alias fetch='git fetch'
alias pull='git pull origin'
alias push='git push origin'
alias stat='git status'
alias tag='git tag'
alias newtag='git tag -a'
alias push-origin='git push --set-upstream origin'
alias stash='git stash'

